{"version":3,"sources":["components/Keys/Keys.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Keys","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","active","play","handlePlay","bind","assertThisInitialized","keydownColorize","document","addEventListener","e","source","getElementById","key","toUpperCase","parentElement","classList","remove","innerHTML","add","target","firstChild","id","querySelectorAll","i","length","react_default","a","createElement","className","onClick","src","React","Component","Navigation","Navbar_default","collapseOnSelect","expand","Toggle","aria-controls","Collapse","Nav_default","Link","href","eventKey","App","src_components_Navbar","components_Keys_Keys","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce10276c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Keys.css\";\n \nclass Keys extends React.Component{ \n    constructor(props){\n        super(props);\n        this.state={\n            active:false,\n            play:\"\"\n        }\n        this.handlePlay=this.handlePlay.bind(this);\n        this.keydownColorize=this.keydownColorize.bind(this);\n    }\n\ncomponentDidMount(){\n    document.addEventListener(\"keydown\",this.handlePlay);\n    document.addEventListener(\"keyup\",this.keydownColorize);\n   \n  }\n\nkeydownColorize(e){\n   \n  let source=document.getElementById(e.key.toUpperCase());\n    if(source){\n        source.parentElement.classList.remove(\"active1\")\n        document.getElementById(\"display\").innerHTML=\"JS\";\n    }\n    }\n   \n\n\nhandlePlay(e){\n  \n    if(e.key){\n        let source=document.getElementById(e.key.toUpperCase());\n    \n        if(source){\n            source.play();\n           document.getElementById(\"display\").innerHTML=e.key.toUpperCase();\n           source.parentElement.classList.add(\"active1\");\n           \n      \n          \n\n        }\n    }else {\n        document.getElementById(\"display\").innerHTML=e.target.firstChild.id;\n        let audio=e.target.firstChild;\n        audio.play();\n        let active=document.querySelectorAll(\".active2\");\n        \n        for(let i=0;i<active.length;i++){\n            active[i].classList.remove(\"active2\");\n            \n           \n        }\n      \n        e.target.classList.add(\"active2\")\n        \n    }\n     \n}\n    \nrender(){\n        return(\n            <div className=\"keys\">\n                \n                <div onClick={this.handlePlay} id=\"audio-q\" className=\"drum-pad\"><audio className=\"clip\" id=\"Q\" src=\"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"></audio>Q</div>\n                <div onClick={this.handlePlay} id=\"audio-w\" className=\"drum-pad\"><audio className=\"clip\" id=\"W\" src=\"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"></audio>W</div>\n                <div onClick={this.handlePlay} id=\"audio-e\" className=\"drum-pad\"><audio className=\"clip\" id=\"E\" src=\"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"></audio>E</div>\n                <div onClick={this.handlePlay} id=\"audio-a\" className=\"drum-pad\"><audio className=\"clip\" id=\"A\" src=\"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"></audio>A</div>\n                <div onClick={this.handlePlay} id=\"audio-s\" className=\"drum-pad\"><audio className=\"clip\" id=\"S\" src=\"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"></audio>S</div>\n                <div onClick={this.handlePlay} id=\"audio-d\" className=\"drum-pad\"><audio className=\"clip\" id=\"D\" src=\"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"></audio>D</div>\n                <div onClick={this.handlePlay} id=\"audio-z\" className=\"drum-pad\"><audio className=\"clip\" id=\"Z\" src=\"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"></audio>Z</div>\n                <div onClick={this.handlePlay} id=\"audio-x\" className=\"drum-pad\"><audio className=\"clip\" id=\"X\" src=\"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"></audio>X</div>\n                <div onClick={this.handlePlay} id=\"audio-c\" className=\"drum-pad\"><audio className=\"clip\" id=\"C\" src=\"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"></audio>C</div>\n            </div>\n        )\n    }\n\n}\nexport default Keys;\n","import React from \"react\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from \"react-bootstrap/Nav\";\nimport \"./Navbar.css\";\n\nclass Navigation extends React.Component{\n  render(){\n\n    return(\n      <Navbar collapseOnSelect expand=\"lg\" >\n     <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n       \n        <Nav  >\n          <Nav.Link href=\"https://rizikolik.github.io/portfolio_page/about.html\" target=\"_blank\">About Me</Nav.Link>\n          <Nav.Link eventKey={2} href=\"https://github.com/rizikolik\" target=\"_blank\">\n           Github\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n \n    )\n  }\n}\nexport default Navigation;","import React from 'react';\nimport Keys from \"./components/Keys/Keys\";\n\nimport './App.css';\nimport Navigation from \"./components/Navbar\"\n\n\nfunction App() {\n  return (\n    <div>\n\n   \n  <Navigation />\n    <div className=\"circle small\">\n     <div id=\"display\">\n       JS\n     </div>\n    </div>\n \n  \n  <div id=\"drum-machine\" >\n      <Keys />\n   \n      \n    </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}